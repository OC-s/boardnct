<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


  <mapper namespace="com.net.board.dao.BoardDAO">
 	
	<select id="getAll" resultType="BoardDTO" parameterType="StartEnd">
		SELECT bno, title, contents, nickname, created_time, updated_time, deleted
			FROM(SELECT (@R := @R+1) AS RN, bno, title, contents, nickname, created_time, updated_time, deleted
				FROM(SELECT b.bno, b.title, b.contents, b.nickname, b.created_time, b.updated_time, b.deleted
						FROM board b 

						<if test="keyword != null">
							<choose>
								<when test='type.equals("bno") and type != null' >
									WHERE b.bno LIKE CONCAT('%',#{keyword},'%') 
									GROUP BY b.bno, b.nickname
								</when>
								<when test='type.equals("title") and type != null' >
									WHERE b.title LIKE CONCAT('%',#{keyword},'%')
									GROUP BY b.bno, b.nickname
								</when>
								<when test='type.equals("contents") and type != null' >
									WHERE b.contents LIKE CONCAT('%',#{keyword},'%')
									GROUP BY b.bno, b.nickname
								</when>
								<when test='type.equals("nickname") and type != null' >
									WHERE b.nickname LIKE CONCAT('%',#{keyword},'%')
									GROUP BY b.bno, b.nickname
								</when>
								<otherwise>
									WHERE b.bno LIKE CONCAT('%',#{keyword},'%') 
									OR b.title LIKE CONCAT('%',#{keyword},'%')
									OR b.contents LIKE CONCAT('%',#{keyword},'%')
									OR b.nickname LIKE CONCAT('%',#{keyword},'%')
									GROUP BY b.bno, b.nickname
								</otherwise>
							</choose>
						</if>
						
						ORDER BY b.bno desc) A, 
				(SELECT @R:=0) AS X  WHERE deleted = 1 LIMIT #{endNo})B
		WHERE RN &gt;=#{startNo}
	</select>
	
	<select id="getTotal" resultType="int" parameterType="String">
		SELECT COUNT(*)
		FROM (SELECT bno, title, contents, nickname, deleted FROM board 
		
		<if test="keyword != null">
			<choose>
				<when test='type.equals("bno") and type != null' >
					WHERE bno LIKE CONCAT('%',#{keyword},'%') 
					GROUP BY bno, nickname
				</when>
				<when test='type.equals("title") and type != null' >
					WHERE title LIKE CONCAT('%',#{keyword},'%')
					GROUP BY bno, nickname
				</when>
				<when test='type.equals("contents") and type != null' >
					WHERE contents LIKE CONCAT('%',#{keyword},'%')
					GROUP BY bno, nickname
				</when>
				<when test='type.equals("nickname") and type != null' >
					WHERE nickname LIKE CONCAT('%',#{keyword},'%')
					GROUP BY bno, nickname
				</when>
				<otherwise>
					WHERE bno LIKE CONCAT('%',#{keyword},'%') 
					OR title LIKE CONCAT('%',#{keyword},'%')
					OR contents LIKE CONCAT('%',#{keyword},'%')
					OR nickname LIKE CONCAT('%',#{keyword},'%')
					GROUP BY bno, nickname
				</otherwise>
			</choose>
		</if>
		
		)A where deleted = 1
	</select>
	
	<select id="getOne" resultType="BoardDTO" parameterType="int">
		SELECT * FROM board
		WHERE bno = #{bno}
	</select>
	
	
	<insert id="insertOne" parameterType="BoardDTO">
		insert into board (title, contents, nickname) value (#{title}, #{contents}, #{nickname})
	</insert>
	
	
	<update id="updateOne" parameterType="BoardDTO">
		UPDATE board
		SET title = #{title}, contents = #{contents}, updated_time = now()
		WHERE bno = #{bno}
	</update>
	
 
	<update id="deleteOne" parameterType="int">
		UPDATE board
		SET deleted = 0
		WHERE bno = #{bno}
	</update>
	
 
 </mapper>
